
/*

Write the following code in your editor below:

A class named Arithmetic with a method named add that takes 2 integers as parameters and returns an integer denoting their sum.
A class named Adder that inherits from a superclass named Arithmetic.  
Input Format :

You are not responsible for reading any input from stdin; a locked code stub will test your submission by calling the add method on an Adder object and passing it 2 integer parameters.

Output Format :

You are not responsible for printing anything to stdout. Your add method must return the sum of its parameters.


In this problem, simply you have to create two new class : Arithmetic and Adder.

Arithmetic class contains only one method : add. add method have two integer parameters and return addition of two parameters with int value.

Adder class extends Arithmetic class and does not contains own method.

Lets see solution in code.

*/




import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Adder a = new Adder();
        System.out.println("My superclass is: Arithmetic");
        a.call();
    }
}

class Arithmetic{
    int add(int a, int b){
        return  a+b;
    }
}
class Adder extends Arithmetic{
    void call(){
        System.out.print(add(40,2)+" ");
        System.out.print(add(10,3)+" ");
        System.out.print(add(10,10)+" ");
    }
}
